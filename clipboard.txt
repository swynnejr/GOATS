This worked for 

async function getParksData() {
    const myURL = new URL(window.location.href);

    const search = myURL.search;
    // The await keyword lets js know that it needs to wait until it gets a response back to continue.
    var response = await fetch(`https://developer.nps.gov/api/v1/parks${search}&api_key=flnFWDil6yBHjlym5jScVjFCzNbVPErCIBA2zdGx`);
    // We then need to convert the data into JSON format.
    var parksData = await response.json();
    console.log(myURL);
    console.log(search);
    console.log(parksData.data);
    const html = parksData.data.map();
    return parksData.data;
}
    
console.log(getParksData());

Slideshow below:

var slideIndex = 1;
showSlides(slideIndex);

// Next/previous controls
function plusSlides(n) {
    showSlides(slideIndex += n);
}

// Thumbnail image controls
function currentSlide(n) {
    showSlides(slideIndex = n);
}

function showSlides(n) {
    var i;
    var slides = document.getElementsByClassName("mySlides");
    var dots = document.getElementsByClassName("dot");
    if (n > slides.length) {slideIndex = 1}
    if (n < 1) {slideIndex = slides.length}
    for (i = 0; i < slides.length; i++) {
        slides[i].style.display = "none";
    }
    for (i = 0; i < dots.length; i++) {
        dots[i].className = dots[i].className.replace(" active", "");
    }
    slides[slideIndex-1].style.display = "block";
    dots[slideIndex-1].className += " active";
}




[Unit]
Description=Gunicorn instance
After=network.target
[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/GOATS
Environment="PATH=/home/ubuntu/GOATS/venv/bin"
ExecStart=/home/ubuntu/GOATS/venv/bin/gunicorn --workers 3 --bind unix:GOATS.sock -m 007 wsgi:application
[Install]
WantedBy=multi-user.target

[Unit]
Description=Gunicorn instance
After=network.target
[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/GOATS
Environment="PATH=/home/ubuntu/GOATS/venv/bin"
ExecStart=/home/ubuntu/GOATS/venv/bin/gunicorn --workers 3 --bind unix:GOATS.sock -m 007 wsgi:application
[Install]
WantedBy=multi-user.target